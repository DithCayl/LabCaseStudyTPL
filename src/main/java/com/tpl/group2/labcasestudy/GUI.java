/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.tpl.group2.labcasestudy;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JFileChooser;
/**
 *
 * @author USER
 */
public class GUI extends javax.swing.JFrame {

    //declared variables
    String txtResultDefined = "Result: ";
    List<String> inputList = new ArrayList();

    InputManager inputManager;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextArea();
        btnOpen = new javax.swing.JButton();
        btnLexical = new javax.swing.JButton();
        btnSyntax = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnSemantic = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtResult.setEditable(false);
        txtResult.setColumns(20);
        txtResult.setRows(5);
        txtResult.setText("Result: ");
        jScrollPane1.setViewportView(txtResult);

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnLexical.setText("Lexical");
        btnLexical.setEnabled(false);
        btnLexical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLexicalActionPerformed(evt);
            }
        });

        btnSyntax.setText("Syntax");
        btnSyntax.setEnabled(false);
        btnSyntax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSyntaxActionPerformed(evt);
            }
        });

        btnClean.setText("Clean");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnSemantic.setText("Semantic");
        btnSemantic.setEnabled(false);
        btnSemantic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSemanticActionPerformed(evt);
            }
        });

        txtInput.setColumns(20);
        txtInput.setRows(5);
        jScrollPane2.setViewportView(txtInput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnSemantic, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                        .addComponent(btnClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLexical, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                        .addComponent(btnSyntax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnLexical, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnSyntax, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSemantic, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                        .addGap(24, 24, 24)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        CleanButton();
        String path = System.getProperty("user.home") + "/Desktop/Input1.txt";;
        JFileChooser chooser = new JFileChooser(path);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        try {
            Scanner scan = new Scanner(f);
            String txt = "";
            while (scan.hasNextLine()) {
                String next = scan.nextLine();
                inputList.add(next);
                txt+=next +"\n";
            }
            txtInput.setText(txt);
            inputManager = new InputManager(inputList);
            btnLexical.setEnabled(true);
        } catch (FileNotFoundException ex) {
            SetResultTextView("File is not found");
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnLexicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLexicalActionPerformed
        inputManager.LexicalAnalysis();
        String output = "";
        for(InputObject inputObj: inputManager.getInputObjectList()){
            for(String token: inputObj.getTokenList()){
                output +=token+" ";
            }
            output+="\n";
        }
        SetResultTextView(output);
        btnSyntax.setEnabled(true);
    }//GEN-LAST:event_btnLexicalActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        // TODO add your handling code here:
        CleanButton();
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnSyntaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSyntaxActionPerformed
        List<Boolean> syntaxList = inputManager.SyntaxAnalysis();
        boolean isThereFalse = false;
        String txt ="";
        for(boolean tf: syntaxList){
            if (!tf) {
             txt +="Syntax is not valid!!\n";
             isThereFalse = true;
             continue;
            }
            txt+="Syntax is valid!!\n";
        }
        SetResultTextView(txt);
        if(!isThereFalse)btnSemantic.setEnabled(true); 
    }//GEN-LAST:event_btnSyntaxActionPerformed

    private void btnSemanticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSemanticActionPerformed
        List<Boolean> semanticList = inputManager.SemanticAnalysis();
        boolean isThereFalse = false;
        String txt="";
        for(boolean tf: semanticList){
             if (!tf) {
                txt +="Semantic is not valid!!\n";
                continue;
                }
           txt+="Semantic is valid!!\n";  
        }
        SetResultTextView(txt);
    }//GEN-LAST:event_btnSemanticActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    //Methods
    void SetResultTextView(String text) {
        txtResult.setText(txtResultDefined+ "\n"+ text);
    }

    void CleanButton() {
        txtInput.setText("");
        txtResult.setText("");
        inputManager = null;
        inputList = new ArrayList();
        btnLexical.setEnabled(false);
        btnSyntax.setEnabled(false);
        btnSemantic.setEnabled(false);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnLexical;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSemantic;
    private javax.swing.JButton btnSyntax;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextArea txtResult;
    // End of variables declaration//GEN-END:variables
}
